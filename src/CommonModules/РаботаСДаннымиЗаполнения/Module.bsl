//  Подсистема "Работа с данными заполнения"
//	Автор: Калякин Андрей Г.
//  https://github.com/KalyakinAG/work-with-filling-data
//  https://infostart.ru/public/841956/

// Добавляет строку к имеющимся
//
// Параметры:
//  ОшибкиЗаполнения - Строка - накопленное описание ошибок
//  ТекстОшибки - Строка - описание очередной ошибки
//
Процедура ДобавитьОшибкуЗаполнения(ОшибкиЗаполнения, ТекстОшибки) Экспорт
	ОшибкиЗаполнения = ОшибкиЗаполнения + "
	|" + ТекстОшибки;
КонецПроцедуры

// Проверить заполнение обязательных реквизитов.
// 
// Параметры:
//  ДокументОбъект  - ДокументОбъект - Документ объект
//  ПроверяемыеРеквизиты - Массив из Строка - Проверяемые реквизиты
//  ОшибкиЗаполнения - Массив из Структура, Неопределено - Ошибки заполнения
Процедура ПроверитьЗаполнениеОбязательныхРеквизитов(ДокументОбъект, ПроверяемыеРеквизиты, ОшибкиЗаполнения) Экспорт
	МетаданныеДокумента	= ДокументОбъект.Метаданные();
	РеквизитыДокумента = МетаданныеДокумента.Реквизиты;
	ТабличныеЧасти = МетаданныеДокумента.ТабличныеЧасти;
	Для каждого ИмяРеквизита Из ПроверяемыеРеквизиты Цикл
		ПозТочки = СтрНайти(ИмяРеквизита, ".");
		Если ПозТочки = 0 Тогда
			Если ИмяРеквизита = "Дата" Тогда
				Реквизит = МетаданныеДокумента.СтандартныеРеквизиты.Дата;
			Иначе
				Реквизит = РеквизитыДокумента.Найти(ИмяРеквизита);
			КонецЕсли;
			Если Реквизит <> Неопределено Тогда
				Если Не ЗначениеЗаполнено(ДокументОбъект[ИмяРеквизита]) Тогда
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Поле ""%1"" не заполнено'"),
						Реквизит.Синоним);
					ДобавитьОшибкуЗаполнения(ОшибкиЗаполнения, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
			ТабЧастьДокумента = ТабличныеЧасти.Найти(ИмяРеквизита);
			Если ТабЧастьДокумента <> Неопределено Тогда
				Если Не ДокументОбъект[ИмяРеквизита].Количество() Тогда
					ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Не введено ни одной строки в список ""%1""'"),
						ТабЧастьДокумента.Синоним);
					ДобавитьОшибкуЗаполнения(ОшибкиЗаполнения, ТекстОшибки);
				КонецЕсли;
			КонецЕсли;
		Иначе
			ИмяТабЧасти = Лев(ИмяРеквизита, ПозТочки - 1);
			ИмяРеквизита = Сред(ИмяРеквизита, ПозТочки + 1);
			ТабЧастьДокумента = ТабличныеЧасти[ИмяТабЧасти];
			Если ТабЧастьДокумента <> Неопределено Тогда
				Реквизит = ТабЧастьДокумента.Реквизиты.Найти(ИмяРеквизита);
				Если Реквизит <> Неопределено Тогда
					Для каждого СтрокаТабЧасти Из ДокументОбъект[ИмяТабЧасти] Цикл
						Если Не ЗначениеЗаполнено(СтрокаТабЧасти[ИмяРеквизита]) Тогда
							ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru = 'Не заполнена колонка ""%1"" в строке %2 списка ""%3""'"),
								Реквизит.Синоним,
								СтрокаТабЧасти.НомерСтроки,
								ТабЧастьДокумента.Синоним);
							ДобавитьОшибкуЗаполнения(ОшибкиЗаполнения, ТекстОшибки);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьПустыеРеквизиты(Объект, МассивРеквизитов = Неопределено) Экспорт
	ПустыеРеквизиты		= Новый Структура;
	МетаданныеОбъекта	= Метаданные.НайтиПоТипу(ТипЗнч(Объект));
	Для Каждого Реквизит Из МетаданныеОбъекта.Реквизиты Цикл
		ИмяРеквизита = Реквизит.Имя;
		Если МассивРеквизитов <> Неопределено И МассивРеквизитов.Найти(ИмяРеквизита) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ПустыеРеквизиты.Вставить(ИмяРеквизита, Реквизит.Тип.ПривестиЗначение(Неопределено));
	КонецЦикла;
	Возврат ПустыеРеквизиты;
КонецФункции

Процедура ОчиститьДанные(Объект, ИсключаемыеРеквизиты, ПроверяемыеРеквизитыТабличныхЧастей) Экспорт
	МетаданныеОбъекта	= Метаданные.НайтиПоТипу(ТипЗнч(Объект));
	ПустыеРеквизиты		= ПолучитьПустыеРеквизиты(Объект, ИсключаемыеРеквизиты);
	ЗаполнитьЗначенияСвойств(Объект, ПустыеРеквизиты);
	Для Каждого МетаданныеТабличнойЧасти Из МетаданныеОбъекта.ТабличныеЧасти Цикл
		ИмяТабличнойЧасти = МетаданныеТабличнойЧасти.Имя;
		Если ИсключаемыеРеквизиты.Найти(ИмяТабличнойЧасти) <> Неопределено Тогда
			Объект[ИмяТабличнойЧасти].Очистить();
		КонецЕсли;
	КонецЦикла;
	Для Каждого ЭлементТабличнойЧасти Из ПроверяемыеРеквизитыТабличныхЧастей Цикл
		ТабличнаяЧасть			= Объект[ЭлементТабличнойЧасти.Ключ];
		ПустыеРеквизитыСтроки	= ПолучитьПустыеРеквизиты(ТабличнаяЧасть);
		ПроверяемыеСтроки		= ЭлементТабличнойЧасти.Значение;
		Для Индекс = 0 По ТабличнаяЧасть.Количество()-1 Цикл
			ЗаполнитьЗначенияСвойств(ТабличнаяЧасть[Индекс], ПустыеРеквизитыСтроки, СтрСоединить(ПроверяемыеСтроки[Индекс].ИсключаемыеРеквизиты, ","));
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

// Проверить заполнение.
// 
// Параметры:
//  Объект - ДокументОбъект, СправочникОбъект - любой объект
//  ПроверяемыеРеквизиты - Массив из Строка, Неопределено - проверяемые реквизиты
//  ИсключаемыеРеквизиты - Массив из Строка, Неопределено - исключаемые реквизиты
//  ПроверяемыеРеквизитыТабличныхЧастей - Массив из Строка, Неопределено - Проверяемые реквизиты табличных частей
//  ИнтерактивныйРежим - Булево - Интерактивный режим
//  Ошибки - Массив из Структура, Неопределено - Ошибки
//  Отказ - Булево - Отказ
Процедура ПроверитьЗаполнение(
		Объект, 
		ПроверяемыеРеквизиты = Неопределено,
		ИсключаемыеРеквизиты,
		ПроверяемыеРеквизитыТабличныхЧастей = Неопределено,
		ИнтерактивныйРежим = Истина,
		Ошибки = Неопределено,
		Отказ = Ложь) Экспорт
	/////////////////////////////////////////	
	//  Инициализация
	Если ПроверяемыеРеквизиты = Неопределено Тогда
		ПроверяемыеРеквизиты = Новый Массив;
	КонецЕсли;
	Если Объект.ДополнительныеСвойства.Свойство("СохраняемыеРеквизиты") Тогда
		МассивСохраняемыеРеквизиты = ОбщийКлиентСервер.Массив(Объект.ДополнительныеСвойства.СохраняемыеРеквизиты);
	Иначе
		МассивСохраняемыеРеквизиты = Новый Массив();
	КонецЕсли;
	ПроверяемыеРеквизитыТабличныхЧастей	= ?(ПроверяемыеРеквизитыТабличныхЧастей = Неопределено, Новый Структура, ПроверяемыеРеквизитыТабличныхЧастей);
	ИсключаемыеРеквизиты = ?(ИсключаемыеРеквизиты = Неопределено, Новый Массив, ИсключаемыеРеквизиты);
	МетаданныеОбъекта = Объект.Метаданные();
	/////////////////////////////////////////	
	//  Проверка заполнения реквизитов шапки	
	Для Каждого ИмяРеквизита Из ПроверяемыеРеквизиты Цикл
		Реквизит = МетаданныеОбъекта.Реквизиты.Найти(ИмяРеквизита);
		ЭтоРеквизитШапки = Истина;
		Если Реквизит = Неопределено Тогда
			ЭтоРеквизитШапки = Ложь;
			Реквизит = МетаданныеОбъекта.ТабличныеЧасти.Найти(ИмяРеквизита);
		КонецЕсли;
		Если ЭтоРеквизитШапки Тогда
			Если Не ЗначениеЗаполнено(Объект[ИмяРеквизита]) Тогда
				Если МассивСохраняемыеРеквизиты.Найти(ИмяРеквизита) <> Неопределено Тогда
					Поле = ИмяРеквизита;
				Иначе
					Поле = "Объект." + ИмяРеквизита;
				КонецЕсли;
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
					Ошибки,
					Поле,
					СтрШаблон("Поле ""%1"" не заполнено.", ОбщийКлиентСервер.ЕстьПустоеЗначение(Реквизит.Синоним, Реквизит.Имя)),
					""
				);
			КонецЕсли;
		Иначе
			Если Объект[ИмяРеквизита].Количество() = 0 Тогда
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
					Ошибки,
					"Объект." + ИмяРеквизита,
					СтрШаблон("Табличная часть ""%1"" не может быть пустой.", ОбщийКлиентСервер.ЕстьПустоеЗначение(Реквизит.Синоним, Реквизит.Имя)),
					""
				);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	/////////////////////////////////////////	
	//  Проверка заполнения реквизитов табличных частей	
	Для Каждого ЭлементТабличнойЧасти Из ПроверяемыеРеквизитыТабличныхЧастей Цикл
		ИмяТабличнойЧасти		= ЭлементТабличнойЧасти.Ключ;
		СтрокиТабличнойЧасти	= ЭлементТабличнойЧасти.Значение;
		Для Индекс = 0 По СтрокиТабличнойЧасти.ВГраница() Цикл
			Для Каждого ИмяРеквизита Из СтрокиТабличнойЧасти[Индекс].ПроверяемыеРеквизиты Цикл
				Если Не ЗначениеЗаполнено(Объект[ИмяТабличнойЧасти][Индекс][ИмяРеквизита]) Тогда
					Реквизит = МетаданныеОбъекта.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты[ИмяРеквизита];
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
						Ошибки,
						СтрШаблон("Объект.%1[%%1].%2", ИмяТабличнойЧасти, ИмяРеквизита),
						СтрШаблон("Поле ""%1"" не заполнено.", ОбщийКлиентСервер.ЕстьПустоеЗначение(Реквизит.Синоним, Реквизит.Имя)),
						"Объект." + ИмяТабличнойЧасти,
						Индекс,
						СтрШаблон("Поле ""%1"" в строке %%1 не заполнено.", ОбщийКлиентСервер.ЕстьПустоеЗначение(Реквизит.Синоним, Реквизит.Имя))
					);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Если ИнтерактивныйРежим Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	Иначе
		Отказ = (Ошибки <> Неопределено);
	КонецЕсли;
КонецПроцедуры

// Проверить дубли строк.
// 
// Параметры:
//  Таблица - ТаблицаЗначений
//  Ключ - Массив из Строка, Строка - Ключ
//  Ошибки - Массив из Структура, Неопределено - Ошибки
//  ЗаголовокТаблицы - Строка - Заголовок таблицы
//  ПутьКДанным - Строка - Путь к данным
// 
// Возвращаемое значение:
//  Булево - Истина - ошибок не обнаружено, Ложь - в противном случае.
Функция ПроверитьДублиСтрок(Таблица, Ключ, Ошибки = Неопределено, Знач ЗаголовокТаблицы = "", ПутьКДанным = "") Экспорт
	Перем ИмяТаблицы;
	ПоляКлюча = ОбщийКлиентСервер.Массив(Ключ);
	МодельЗапроса = Общий.МодельЗапроса()
	;//  Выборка из таблицы
	МодельЗапроса.ЗапросПакета().Поместить("ВТ_ТАБЛИЦА")
		.Источник(Таблица)
		.Поле("*")
	;
	Если МодельЗапроса.Источник.Источник.ДоступныеПоля.Найти("НомерСтроки") = Неопределено Тогда
		МодельЗапроса
			.Поле("АВТОНОМЕРЗАПИСИ()", "НомерСтроки")
		;
	КонецЕсли;
	;//  Подсчет повторов
	МодельЗапроса.ЗапросПакета().Поместить("ВТ_ДУБЛИ")
		.Источник("ВТ_ТАБЛИЦА")
	;
	Для Каждого Поле Из ПоляКлюча Цикл
		МодельЗапроса
			.Поле(Поле)
		;
	КонецЦикла;
	МодельЗапроса
		.Количество("НомерСтроки", "КоличествоДублей")
		.Минимум("НомерСтроки", "НомерПервойСтрокиДубля")
		.Отбор("КОЛИЧЕСТВО(НомерСтроки) > 1")
	;//  Выборка дублированных строк
	МодельЗапроса.ЗапросПакета()
		.Источник("ВТ_ДУБЛИ")
		.Источник("ВТ_ТАБЛИЦА")
		.ВнутреннееСоединение("ВТ_ДУБЛИ", "ВТ_ТАБЛИЦА")
			.Связь(Ключ)
		.Поле("ВТ_ДУБЛИ.НомерПервойСтрокиДубля")
		.Поле("ВТ_ДУБЛИ.КоличествоДублей")
		.Поле("ВТ_ТАБЛИЦА.*")
		.Порядок("НомерПервойСтрокиДубля")
		.Порядок("НомерСтроки")
	;//  Обработка результата
	МодельЗапроса.ВыполнитьЗапрос();
	Результат = МодельЗапроса.Результат();
	Если Результат.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;
	
	МетаданныеТаблицы = Метаданные.НайтиПоТипу(ТипЗнч(Таблица));
	Если МетаданныеТаблицы <> Неопределено Тогда
		ИмяТаблицы = МетаданныеТаблицы.Имя;
		Если НЕ ЗначениеЗаполнено(ЗаголовокТаблицы) Тогда
			ЗаголовокТаблицы = МетаданныеТаблицы.Синоним;
		КонецЕсли;
	КонецЕсли;

	ПервоеПолеКлюча = ПоляКлюча[0];

	Если ПоляКлюча.Количество() = 1 Тогда
		ТекстЗаголовка = СтрШаблон("В таблице ""%1"" обнаружены дубли строк по значению поля ""%2"":", ЗаголовокТаблицы, ПервоеПолеКлюча);
	Иначе
		ТекстЗаголовка = СтрШаблон("В таблице ""%1"" обнаружены дубли строк по значениям полей ""%2"":", ЗаголовокТаблицы, СтрСоединить(ПоляКлюча, """, """));
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки,
		?(ЗначениеЗаполнено(ИмяТаблицы), СтрШаблон("Объект.%1", ИмяТаблицы), СтрШаблон("%1", ПутьКДанным)),
		ТекстЗаголовка,
		ЗаголовокТаблицы,
		,
		ТекстЗаголовка
	);
	
	Выборка = Результат.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("НомерПервойСтрокиДубля") Цикл
		Значения = Новый Массив;
		Для каждого ПолеКлюча Из ПоляКлюча Цикл
			Значения.Добавить(Выборка[ПолеКлюча]);
		КонецЦикла;
		НомераСтрок = Новый Массив;
		Пока Выборка.Следующий() Цикл
			НомераСтрок.Добавить(Выборка.НомерСтроки);
		КонецЦикла;
		НомерПервойСтроки = Выборка.НомерПервойСтрокиДубля;
		ТекстСообщения = СтрШаблон("	Значения: ""%1"" повторены в строках: %2", СтрСоединить(Значения, """, """), СтрСоединить(НомераСтрок, ", "));
		Если ИмяТаблицы <> Неопределено Тогда
			Поле = СтрШаблон("Объект.%1[%2].НомерСтроки", ИмяТаблицы, Формат(НомерПервойСтроки - 1, "ЧН=0; ЧГ=;"));
		Иначе
			Поле = СтрШаблон("%1[%2]%3", ПутьКДанным, Формат(НомерПервойСтроки - 1, "ЧН=0; ЧГ=;"), ПервоеПолеКлюча);
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
			Ошибки,
			Поле,
			ТекстСообщения,
			ЗаголовокТаблицы,
			НомерПервойСтроки - 1,
			ТекстСообщения
		);

	КонецЦикла;
	Возврат Ложь;
КонецФункции
